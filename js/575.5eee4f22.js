"use strict";(self["webpackChunkcode"]=self["webpackChunkcode"]||[]).push([[575],{575:function(e,t,a){a.r(t),a.d(t,{default:function(){return c}});var r=function(){var e=this,t=e._self._c;return t("div",[t("el-breadcrumb",{attrs:{separator:"/"}},[t("el-breadcrumb-item",[e._v("首页")]),t("el-breadcrumb-item",[e._v("问题管理")])],1),t("el-card",{staticStyle:{"margin-top":"20px"}},[t("div",{staticStyle:{margin:"15px 0"}},[e._v("问题列表")]),t("el-row",[t("el-col",{attrs:{span:24}},[t("el-header",{staticStyle:{"background-color":"#ffffff","margin-left":"-5px"}},[t("el-form",{staticClass:"query-form",attrs:{inline:"",size:"mini","label-width":"120",model:e.searchProduct}},[t("el-form-item",[t("el-input",{staticClass:"input",staticStyle:{"border-radius":"14px !important"},attrs:{placeholder:""},on:{focus:function(e){}}},[t("el-button",{attrs:{slot:"append",icon:"el-icon-search"},slot:"append"})],1)],1)],1)],1),t("el-table",{staticClass:"select-from",staticStyle:{width:"100%"},attrs:{data:e.dataList,stripe:!0}},[t("ElTableColumn",{attrs:{type:"selection"}}),t("el-table-column",{attrs:{sortable:"",width:"100",prop:"id",label:"ID"}}),t("el-table-column",{attrs:{align:"center",sortable:"",prop:"name",label:"项目名称"}}),t("el-table-column",{attrs:{align:"center",prop:"type",label:"问题类型"},scopedSlots:e._u([{key:"default",fn:function(a){return[t("span",[e._v(e._s(a.row.type)),t("i",{staticClass:"co-icon-filter"})])]}}])}),t("el-table-column",{attrs:{label:"操作",width:"300"},scopedSlots:e._u([{key:"default",fn:function(a){return[t("el-button",{staticStyle:{margin:"0 0 0 0"},attrs:{slot:"reference",icon:"el-icon-edit",size:"mini",type:"warning"},on:{click:function(t){return e.setDialog(a.row)}},slot:"reference"},[e._v("编辑 ")]),t("el-popconfirm",{attrs:{title:"确定删除"+a.row.name+"吗？"},on:{confirm:function(t){return e.remove(a.row.name)}}},[t("el-button",{staticStyle:{margin:"0 0 0 15px"},attrs:{slot:"reference",icon:"el-icon-close",size:"mini",type:"danger"},slot:"reference"},[e._v("删除 ")])],1)]}}])})],1)],1)],1),t("el-row",{staticClass:"page-row"},[t("el-pagination",{staticClass:"el-pagination",attrs:{layout:"total, sizes, prev, pager, next, jumper","page-sizes":[5,10,30,50],"current-page":e.current,"page-size":e.size,total:e.total},on:{"size-change":e.sizeChange,"current-change":e.currentChange,"prev-click":e.currentChange,"next-click":e.currentChange}})],1)],1),t("el-dialog",{attrs:{title:"添加项目",visible:e.saveDialog,width:"800px"},on:{"update:visible":function(t){e.saveDialog=t}}},[t("el-form",{ref:"ruleForm",attrs:{model:e.productObj,"label-width":"80px"}},[t("el-form-item",{attrs:{label:"项目名称",prop:"title",rules:[{required:!0,message:"名称不能为空"}]}},[t("el-input",{attrs:{maxlength:"8","show-word-limit":""},model:{value:e.productObj.title,callback:function(t){e.$set(e.productObj,"title",t)},expression:"productObj.title"}})],1),t("el-form-item",{attrs:{label:"价格(分)",prop:"price",rules:[{required:!0,message:"价格不能为空"},{type:"number",message:"价格必须为数字值"}]}},[t("el-input",{model:{value:e.productObj.price,callback:function(t){e.$set(e.productObj,"price",e._n(t))},expression:"productObj.price"}})],1),t("el-form-item",[t("el-button",{staticStyle:{width:"255px",margin:"45px 0 0 65px"},attrs:{type:"primary",disabled:""===e.productObj.title||null===e.productObj.price||""===e.productSet.price},on:{click:e.productAdd}},[e._v("立即添加 ")])],1)],1)],1),t("el-dialog",{attrs:{title:"项目编辑",visible:e.updateDialog,width:"600px"},on:{"update:visible":function(t){e.updateDialog=t}}},[t("span",{staticClass:"dialog-footerB",attrs:{slot:"title"},slot:"title"},[t("div",{staticStyle:{"margin-top":"15px"}},[t("div",{staticStyle:{display:"flex","justify-content":"space-between"}},[t("span",[e._v("项目名称:"+e._s(e.productSet.name))])])]),t("hr")]),t("el-form",{ref:"ruleForm",attrs:{model:e.productSet,"label-width":"80px"}},[t("el-form-item",{attrs:{label:"问题详情:",prop:"description",rows:"4"}},[t("el-input",{attrs:{type:"textarea"},model:{value:e.productSet.description,callback:function(t){e.$set(e.productSet,"description",t)},expression:"productSet.description"}})],1),t("el-form-item",{attrs:{label:"修正意见:",prop:"fix"}},[t("el-input",{attrs:{type:"textarea",rows:"4"},model:{value:e.productSet.fix,callback:function(t){e.$set(e.productSet,"fix",t)},expression:"productSet.fix"}})],1),t("el-form-item",{attrs:{label:"代码范例:",prop:"example"}},[t("el-input",{attrs:{type:"textarea",rows:"10"},model:{value:e.productSet.example,callback:function(t){e.$set(e.productSet,"example",t)},expression:"productSet.example"}})],1)],1),t("div",{staticStyle:{"padding-left":"400px"},attrs:{slot:"footer"},slot:"footer"},[t("el-button",{attrs:{size:"small",type:"primary"},on:{click:e.updateProduct}},[e._v("保存")]),t("el-button",{attrs:{size:"small"},on:{click:function(t){e.updateDialog=!1}}},[e._v("返回")])],1)],1)],1)},i=[],n={data(){return{adminName:"",searchProduct:{id:""},dataList:[{id:"P001",name:"学生信息管理系统",type:"代码逻辑错误",description:"在处理学生信息时，系统出现了一个逻辑错误，导致学生的成绩无法正确地录入和显示。请分析代码并找出问题所在。",fix:"检查代码中的条件语句和循环语句，确保逻辑正确。可以使用调试工具或日志记录来定位问题所在。",example:'# 假设问题出在成绩录入环节，可以通过以下方式进行调试  \ndef add_grade(student_id, grade):  \n    if student_id not in student_db:  # 如果学生ID不存在于数据库中  \n        print("Invalid student ID")  # 输出错误提示信息  \n        return  \n    if grade < 0 or grade > 100:  # 如果成绩不在0到100之间  \n        print("Invalid grade")  # 输出错误提示信息  \n        return  \n    student_db[student_id].add_grade(grade)  # 正常录入成绩  \n  \n# 在代码中加入调试语句，打印关键变量的值，以便定位问题所在  \nprint("student_id:", student_id)  \nprint("grade:", grade)'},{id:"P002",name:"电子邮件客户端",type:"代码安全漏洞",description:"在处理电子邮件时，客户端代码存在一个安全漏洞，可能导致用户的账户信息和邮件内容被恶意攻击者获取。请进行代码分析并修复此漏洞。",fix:"对用户的输入进行验证和过滤，防止注入攻击。使用安全的API或库来处理邮件内容和账户信息。",example:'// 假设问题出在账户登录环节，可以通过以下方式进行修复  \npublic boolean login(String username, String password) {  \n    if (username == null || password == null || username.isEmpty() || password.isEmpty()) {  \n        return false;  // 输入验证，防止空输入或空字符串输入  \n    }  \n    String[] parts = username.split("@");  // 将用户名按照@分隔成两部分  \n    if (parts.length != 2) {  \n        return false;  // 输入验证，确保用户名格式正确  \n    }  \n    // 使用安全的API来验证用户名和密码，例如调用邮件服务商的API进行验证  \n    boolean isValid = emailService.verifyAccount(username, password);  \n    if (!isValid) {  \n        return false;  // 如果验证失败，返回错误结果  \n    }  \n    // 正常登录成功，进行后续操作...  \n}'},{id:"P003",name:"电子商务网站",type:"代码性能问题",description:"在处理大量用户订单时，网站的性能出现了瓶颈，导致用户无法正常下单或订单处理速度缓慢。请进行代码分析并优化性能。",fix:"使用缓存技术减少数据库访问次数，对数据库查询进行优化，考虑使用分布式架构来分担负载。",example:'// 假设问题出在数据库查询环节，可以通过以下方式进行优化  \nfunction get_product($id) {  \n    $cacheKey = "product_$id";  // 定义缓存键  \n    $cachedData = memcached->get($cacheKey);  // 从缓存中获取数据  \n    if ($cachedData !== false) {  \n        return $cachedData;  // 如果缓存中有数据，直接返回  \n    }  \n    // 缓存中没有数据，从数据库中获取数据，并进行缓存  \n    $data = dbQuery("SELECT * FROM products WHERE id=$id");  \n    memcached->set($cacheKey, $data);  // 将数据存入缓存中  \n    return $data;  \n}'},{id:"P004",name:"在线视频播放器",type:"代码兼容性问题",description:"在某些浏览器上，视频播放器无法正常工作，出现了兼容性问题。请进行代码分析并解决此问题。",fix:"考虑不同浏览器对HTML5的支持程度，使用兼容性库或插件来解决问题，对视频格式进行转换或封装。",example:"// 假设问题出在视频格式兼容性上，可以通过以下方式进行解决  \nvar videoElement = document.createElement('video');  \nvideoElement.src = 'video.mp4';  // 设置视频源为MP4格式  \nif (videoElement.canPlayType('video/ogg') !== '') {  \n    videoElement.src = 'video.ogg';  // 如果浏览器支持OGG格式，则更换视频源为OGG格式  \n}  \n// 在视频播放器初始化时，根据浏览器的支持程度选择合适的视频格式进行播放  \nif (videoElement.readyState > 3) {  \n    videoElement.play();  // 如果浏览器支持播放视频，则开始播放  \n} else {  \n    // 如果浏览器不支持播放视频，则显示错误提示信息或使用备用播放器方案...  \n}"},{id:"P005",name:"实时地图应用",type:"代码内存泄漏",description:"在长时间使用应用后，设备内存占用不断增加，导致应用运行缓慢甚至崩溃。请进行代码分析并找出内存泄漏的原因。",fix:"检查对象创建和销毁情况，避免重复创建相同的对象，及时释放不再使用的内存空间。使用内存分析工具来检测内存泄漏。",example:"// 假设问题出在地图对象创建和销毁环节，可以通过以下方式进行修正  \npublic class MapManager {  \n    private MapView mapView;  // 单例地图视图对象，全局唯一  \n    private List<Marker> markerList;  // 标记点列表，用于存储多个标记点对象  \n    public getMapView() {  \n        if (mapView == null) {  \n            mapView = new MapView();  // 创建地图视图对象，仅在第一次调用时创建一次  \n        }  \n        return mapView;  // 返回地图视图对象供其他组件使用  \n    }  \n    public addMarker(Marker marker) {  \n        if (markerList == null) {  \n            markerList = new ArrayList<Marker>();  // 初始化标记点列表对象仅创建一次即可重复使用对象内部空间来存储多个标记点对象markerList.add(marker);  // 将新的标记点加入列表中供后续使用或操作标记点对象可以重复使用不再需要的标记点对象应当及时从列表中移除并销毁以释放内存空间markerList.remove(marker);  // 从列表中移除不需要的标记点对象并销毁以释放内存空间当不再需要地图视图对象时应当及时销毁以释放内存空间mapView = null;  // 将地图视图对象设置为null以便垃圾回收器来回收其占用的内存空间当不再需要标记点列表对象时也应当及时销毁以释放内存空间markerList = null;  // 将标记点列表对象设置为null以便垃圾回收器来回收其占用的内存空间"}],size:5,current:1,total:0,saveDialog:!1,productObj:{title:"",price:null},updateDialog:!1,productSet:{id:null,title:"",price:null,example:"",fix:"",description:""},filterArr:[{text:"评级A",value:"A"},{text:"评级B",value:"B"},{text:"评级C",value:"C"}],filterArr2:[{text:"C",value:"下拉1"},{text:"C++",value:"下拉2"},{text:"C#",value:"下拉2"},{text:"JAVA",value:"下拉2"}],goBack(){}}},created(){this.getData()},methods:{handleSave(){this.saveDialog=!0},setDialog(e){this.productSet=e,this.updateDialog=!0},filterChange(e){e.id&&(this.dataList.id=e.id[0])},remove(e){this.dataList=this.dataList.filter((t=>t.name!==e))},productAdd(){},updateProduct(){this.updateDialog=!1},sizeChange(e){this.size=e,""!==this.searchProduct.productName?this.search():this.getData()},search(){""!==this.searchProduct.productName||this.$message.error("搜索的项目名不能为空")},currentChange(e){this.current=e,""!==this.searchProduct.productName?this.search():this.getData()},getData(){}}},l=n,s=a(1001),o=(0,s.Z)(l,r,i,!1,null,null,null),c=o.exports}}]);
//# sourceMappingURL=575.5eee4f22.js.map